name: Rust

on: workflow_dispatch

env:
  CARGO_TERM_COLOR: always

jobs:
  build-mac:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install ffmpeg
      run: |
        brew tap-new superkooks/prospectivegopher
        cp build-mac/ffmpeg.rb $(brew --repo superkooks/prospectivegopher)/Formula/
        brew install -s superkooks/prospectivegopher/ffmpeg

    - name: Install rust nightly
      run: |
        rustup toolchain install nightly
        rustup default nightly
      
    - name: Build display
      run: |
        cargo build --verbose --bin display

    - uses: actions/upload-artifact@v4
      with:
        name: mac-bin
        path: |
          target/debug/display

  build-windows:
    runs-on: windows-latest
    env: 
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    steps:
    - uses: actions/checkout@v4
  
    - name: Install vcpkg
      run: |
        vcpkg integrate install

    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Get ffmpeg libraries
      run: |
        vcpkg install ffmpeg[core,avcodec,avformat,avfilter,avdevice,swresample,swscale,x264]:x64-windows-static-md

    - name: Download and install Windows Driver Kit
      run: |
        Invoke-WebRequest -Uri "https://download.microsoft.com/download/0/5/F/05FD6919-6250-425B-86ED-9B095E54065A/wdfcoinstaller.msi" -OutFile wdfcoinstaller.msi
        & msiexec.exe /qn /passive /i wdfcoinstaller.msi
        $file = "wdfcoinstaller.msi"
        $log = "install.log" 
        $procMain = Start-Process "msiexec" "/i `"$file`" /qn /l*! `"$log`"" -NoNewWindow -PassThru
        Start-Sleep -Seconds 3
        $procLog = Start-Process "powershell" "Get-Content -Path `"$log`" -Wait" -NoNewWindow -PassThru
        $procMain.WaitForExit() 
        $procLog.Kill()

    - name: Install rust nightly
      run: |
        rustup set auto-self-update disable
        rustup toolchain install nightly
        rustup default nightly

    - name: Build display
      run: |
        cargo build --verbose --bin display

    - name: Build capture
      run: |
        cargo build --verbose --bin capture

    - uses: actions/upload-artifact@v4
      with:
        name: windows-bin
        path: |
          target/debug/display.exe
          target/debug/capture.exe
